/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    GDrive: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "BandwidthLimitExceeded",
          type: "error",
        },
        {
          inputs: [],
          name: "EnforcedPause",
          type: "error",
        },
        {
          inputs: [],
          name: "ExpectedPause",
          type: "error",
        },
        {
          inputs: [],
          name: "FileNotFound",
          type: "error",
        },
        {
          inputs: [],
          name: "FileSizeTooLarge",
          type: "error",
        },
        {
          inputs: [],
          name: "FolderNotFound",
          type: "error",
        },
        {
          inputs: [],
          name: "InsufficientPayment",
          type: "error",
        },
        {
          inputs: [],
          name: "InsufficientPermissions",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidInput",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidSubscription",
          type: "error",
        },
        {
          inputs: [],
          name: "LinkExpired",
          type: "error",
        },
        {
          inputs: [],
          name: "LinkNotActive",
          type: "error",
        },
        {
          inputs: [],
          name: "NotFileOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "NotFolderOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          inputs: [],
          name: "StorageLimitExceeded",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "accessor",
              type: "address",
            },
          ],
          name: "FileAccessed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
          ],
          name: "FileDeleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint16",
              name: "version",
              type: "uint16",
            },
          ],
          name: "FileUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "FileUploaded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "folderId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "FolderCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "referrer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "amount",
              type: "uint128",
            },
          ],
          name: "ReferralRewardPaid",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "linkId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
          ],
          name: "ShareLinkCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "tier",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint64",
              name: "duration",
              type: "uint64",
            },
          ],
          name: "SubscriptionPurchased",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "linkId",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "password",
              type: "string",
            },
          ],
          name: "accessFileViaLink",
          outputs: [
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "bandwidthRatePerGB",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "parentFolderId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "isPublic",
              type: "bool",
            },
          ],
          name: "createFolder",
          outputs: [
            {
              internalType: "bytes32",
              name: "folderId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
            {
              internalType: "uint64",
              name: "expiryDate",
              type: "uint64",
            },
            {
              internalType: "uint32",
              name: "maxAccess",
              type: "uint32",
            },
            {
              internalType: "string",
              name: "password",
              type: "string",
            },
          ],
          name: "createShareLink",
          outputs: [
            {
              internalType: "bytes32",
              name: "linkId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "emergencyWithdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "fileExpiryDates",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "fileMetadata",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "fileType",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "filePayments",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "filePermissions",
          outputs: [
            {
              internalType: "enum GDrive.Permission",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "fileTypeIndex",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "files",
          outputs: [
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "uint128",
              name: "size",
              type: "uint128",
            },
            {
              internalType: "uint64",
              name: "uploadDate",
              type: "uint64",
            },
            {
              internalType: "uint32",
              name: "downloadCount",
              type: "uint32",
            },
            {
              internalType: "uint16",
              name: "version",
              type: "uint16",
            },
            {
              internalType: "bool",
              name: "isEncrypted",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isPublic",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "folderFiles",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "folderPermissions",
          outputs: [
            {
              internalType: "enum GDrive.Permission",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "folderSubFolders",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "folders",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "parentFolderId",
              type: "bytes32",
            },
            {
              internalType: "uint64",
              name: "createdDate",
              type: "uint64",
            },
            {
              internalType: "bool",
              name: "isPublic",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
          ],
          name: "getFileDetails",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "fileType",
              type: "string",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
            {
              internalType: "uint128",
              name: "size",
              type: "uint128",
            },
            {
              internalType: "uint64",
              name: "uploadDate",
              type: "uint64",
            },
            {
              internalType: "bool",
              name: "isEncrypted",
              type: "bool",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint64",
              name: "expiryDate",
              type: "uint64",
            },
            {
              internalType: "uint32",
              name: "downloadCount",
              type: "uint32",
            },
            {
              internalType: "uint16",
              name: "version",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSubscriptionTiers",
          outputs: [
            {
              internalType: "uint128[4]",
              name: "storageLimits",
              type: "uint128[4]",
            },
            {
              internalType: "uint128[4]",
              name: "bandwidthLimits",
              type: "uint128[4]",
            },
            {
              internalType: "uint128[4]",
              name: "prices",
              type: "uint128[4]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getUserStats",
          outputs: [
            {
              internalType: "uint128",
              name: "storageUsed",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "storageLimit",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "bandwidthUsed",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "bandwidthLimit",
              type: "uint128",
            },
            {
              internalType: "uint256",
              name: "fileCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "folderCount",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "subscriptionTier",
              type: "uint8",
            },
            {
              internalType: "uint64",
              name: "subscriptionExpiry",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "lastBandwidthReset",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "maxFileSize",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "minimumStoragePeriod",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "publicFiles",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "publicFolders",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "tier",
              type: "uint8",
            },
            {
              internalType: "uint64",
              name: "duration",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "referrer",
              type: "address",
            },
          ],
          name: "purchaseSubscription",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "referralRewardPercentage",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "referralRewards",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "referrers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint128",
              name: "_rate",
              type: "uint128",
            },
          ],
          name: "setBandwidthRate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint128",
              name: "_rate",
              type: "uint128",
            },
          ],
          name: "setStorageRate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "shareLinkPasswords",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "shareLinks",
          outputs: [
            {
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "uint64",
              name: "expiryDate",
              type: "uint64",
            },
            {
              internalType: "uint32",
              name: "accessCount",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "maxAccess",
              type: "uint32",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "storageRatePerMBPerYear",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "subscriptions",
          outputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              internalType: "uint128",
              name: "storageLimit",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "bandwidthLimit",
              type: "uint128",
            },
            {
              internalType: "uint64",
              name: "expiryDate",
              type: "uint64",
            },
            {
              internalType: "uint8",
              name: "tier",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "taggedFiles",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "tierBandwidthLimits",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "tierPrices",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "tierStorageLimits",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "tier",
              type: "uint8",
            },
            {
              internalType: "uint128",
              name: "storageLimit",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "bandwidthLimit",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "price",
              type: "uint128",
            },
          ],
          name: "updateTierConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "uploadFile",
          outputs: [
            {
              internalType: "bytes32",
              name: "fileId",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userBalances",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userBandwidthUsed",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userFiles",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userFolders",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userStorageUsed",
          outputs: [
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        paused: "@openzeppelin/contracts/utils/Pausable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
